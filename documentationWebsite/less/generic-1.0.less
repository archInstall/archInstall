//!/usr/bin/env lessc
// -*- coding: utf-8 -*-

/* region header

Copyright Torben Sickert 16.12.2012

License
-------

This library written by Torben Sickert stand under a creative commons naming
3.0 unported license. see http://creativecommons.org/licenses/by/3.0/deed.de

endregion

region special selectors

InternetExplorer6-: * html
InternetExplorer7+: *+ html

Conventions
-----------

(gcX := generic convention number x)

- __gc1__ Only use utf-8 file encoding and unix line feeds (\n)
    - __bad__: ```text...\r\n``` or ```text...\r```
    - __good__: ```text...\n```
- __gc2__ Always indent your code with __4__ whitespaces, don't use and
  tabulators or invisbile symbols at the end of your code line.
- __gc3__ Browser specific code and tell which version is targeted on which
  engine to maintain cross browser compatibility

__bad__:
```
#!css
background-color: white;
background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(white), to(black));
background: -webkit-linear-gradient(@direction, white, black);
background: -moz-linear-gradient(@direction, white, black);
background: -ms-linear-gradient(@direction, white, black);
background: -o-linear-gradient(@direction, white, black);
background: linear-gradient(white, black);
```
__good__:
```
#!css
// fallback
background-color: white;
// safari 4-5, chrome 1-9
background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(white), to(black));
// safari 5.1, chrome 10+
background: -webkit-linear-gradient(@direction, white, black);
// firefox 3.6+
background:    -moz-linear-gradient(@direction, white, black);
// internetExplorer 10
background:     -ms-linear-gradient(@direction, white, black);
// opera 11.10+
background:      -o-linear-gradient(@direction, white, black);
// css3
background:         linear-gradient(white, black);
```

endregion */

#generic() {

// region mixins

    // Renders a gradient from given color to another given color.
    .linear-gradient(
      @direction: top, @fallback: '', @from: black, @to: white
    ) {
        .background-image() when (@direction = top) {
            background-image: linear-gradient(to bottom, @from, @to);
        }
        .background-image() when (@direction = left) {
            background-image: linear-gradient(to right, @from, @to);
        }
        .background-color() when (@fallback = '') {
            background-color: @from;
        }
        .background-color() when not(@fallback = '') {
            background-color: @fallback;
        }
        // fallback
        .background-color;
        // safari 4-5, chrome 1-9
        background: -webkit-gradient(
            linear, 0% 0%, 0% 100%, from(@from), to(@to));
        // safari 5.1, chrome 10+
        background: -webkit-linear-gradient(@direction, @from, @to);
        // firefox 3.6+
        background:    -moz-linear-gradient(@direction, @from, @to);
        // internetExplorer 10
        background:     -ms-linear-gradient(@direction, @from, @to);
        // opera 11.10+
        background:      -o-linear-gradient(@direction, @from, @to);
        // css3
        background:         linear-gradient(@from, @to);
        .background-image;
        // internetExplorer 5 - 7
        // NOTE: Won't parse sometimes.
        // filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", @to, @from));
    }
    // Defines background image or color size.
    .background-size($value: 100%) {
        // safari, chrome, iOS Safari 3.2, Android 2.1
        -webkit-background-size: @arguments;
        // firefox
           -moz-background-size: @arguments;
        // opera 11.10+
             -o-background-size: @arguments;
                background-size: @arguments;
    }
    // Mixin for CSS-property "tab-size", generates cross-browser-compatible
    // "tab-size" output.
    .tab-size(@value: 4) {
        // firefox
        -moz-tab-size: @arguments;
        // opera 11.10+
          -o-tab-size: @arguments;
        // css3
             tab-size: @arguments;
    }
    // Disables or enables selection of content of a given element.
    .user-select(@value: none) {
        // safari, chrome, iOS Safari 3.2, Android 2.1
        -webkit-user-select: @arguments;
        // firefox
           -moz-user-select: @arguments;
        // internet explorer
            -ms-user-select: @arguments;
        // css3
                user-select: @arguments;
    }
    // Shows rounded corners at the dom nodes.
    .border-radius(@size: 4px) {
        // safari, chrome, iOS Safari 3.2, Android 2.1
        -webkit-border-radius: @arguments;
        // konqueror
         -khtml-border-radius: @arguments;
        // firefox
           -moz-border-radius: @arguments;
        // css3
                border-radius: @arguments;
    }
    // Defines rounded border in a detailed way.
    .rounded-border(
        @topLeft: 0, @topRight: 0, @bottomLeft: 0, @bottomRight: 0
    ) {
        // safari, chrome, iOS Safari 3.2, Android 2.1
        -webkit-border-top-left-radius: @topLeft;
        -webkit-border-top-right-radius: @topRight;
        -webkit-border-bottom-left-radius: @bottomLeft;
        -webkit-border-bottom-right-radius: @bottomRight;
        // firefox
        -moz-border-radius-topleft: @topLeft;
        -moz-border-radius-topright: @topRight;
        -moz-border-radius-bottomleft: @bottomLeft;
        -moz-border-radius-bottomright: @bottomRight;
        // css3
        border-top-left-radius: @topLeft;
        border-top-right-radius: @topRight;
        border-bottom-left-radius: @bottomLeft;
        border-bottom-right-radius: @bottomRight;

        #generic > .background-clip(padding-box);
    }
    // Shows shadows on dom nodes.
    .box-shadow(
        @horizontalPosition: 2px, @verticalPosition: 2px, @blurDistance: 2px,
        @spreadDistance: ~'', @color: black, @type: ~''
    ) {
        // safari, chrome, iOS Safari 3.2, Android 2.1
        -webkit-box-shadow: @arguments;
        // firefox
           -moz-box-shadow: @arguments;
        // opera
             -o-box-shadow: @arguments;
        // internet explorer
            -ms-box-shadow: @arguments;
        // css3
                box-shadow: @arguments;
    }
    // Allows you to make columns in a text.
    .columns(
        @columnWidth: 250px, @columnCount: 0, @columnGap: 50px,
        @columnRuleColor: #EEE, @columnRuleStyle: solid,
        @columnRuleWidth: 1px
    ) {
        // safari, chrome, iOS Safari 3.2, Android 2.1
        -webkit-column-width: @columnWidth;
        -webkit-column-count: @columnCount;
        -webkit-column-gap: @columnGap;
        -webkit-column-rule-color: @columnRuleColor;
        -webkit-column-rule-style: @columnRuleStyle;
        -webkit-column-rule-width: @columnRuleWidth;
        // firefox
        -moz-column-width: @columnWidth;
        -moz-column-count: @columnCount;
        -moz-column-gap: @columnGap;
        -moz-column-rule-color: @columnRuleColor;
        -moz-column-rule-style: @columnRuleStyle;
        -moz-column-rule-width: @columnRuleWidth;
        // css3
        column-width: @columnWidth;
        column-count: @columnCount;
        column-gap: @columnGap;
        column-rule-color: @columnRuleColor;
        column-rule-style: @columnRuleStyle;
        column-rule-width: @columnRuleWidth;
    }
    // This property is used to determine whether the backgrounds extends
    // into the border or not.
    .background-clip(@value: padding-box) {
        // chrome, safari, other webkit browsers
        -webkit-background-clip: @arguments;
        // netscape
           -moz-background-clip: @arguments;
        // css3
                background-clip: @arguments;
    }
    // Make a dom node transparent.
    .opacity(@value) {
        // chrome, safari, other webkit browsers
        -webkit-opacity: @arguments;
        // safari 1.x
         -khtml-opacity: @arguments;
        // netscape
           -moz-opacity: @arguments;
        // css3
                opacity: @arguments;
        @valueInPercent: @value * 100;
        // internetExplorer 8
        // NOTE: Problems with animations.
        // -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=@{valueInPercent})";
        // internetExplorer 5 - 7
        // NOTE: Problems with animations.
        //     filter: alpha(opacity=@valueInPercent);
    }
    // Apply a box layout model to a dom node.
    .box-sizing(@type: border-box) {
        // chrome, safari, other webkit browsers
        -webkit-box-sizing: @arguments;
        // netscape, firefox 2.0+
           -moz-box-sizing: @arguments;
        // css3, internetExplorer 8+, opera 9.5+
                box-sizing: @arguments;
    }

    // region animation

    // Generates cross browser compatible "transform-origin" for a given
    // element.
    .transform-origin(@arguments) {
        // chrome, safari, iOS Safari, Android Stock
        -webkit-transform-origin: @arguments;
        // opera 12
             -o-transform-origin: @arguments;
        // firefox
           -moz-transform-origin: @arguments;
        // css3, internetExplorer 9+
                transform-origin: @arguments;
    }
    // Generates cross browser compatible "transform" for a given element.
    .transform(@arguments) {
        // chrome, safari, iOS Safari, Android Stock
        -webkit-transform: @arguments;
        // opera 12
             -o-transform: @arguments;
        // internetExplorer
            -ms-transform: @arguments;
        // css3, internetExplorer 9+
                transform: @arguments;
    }
    // Rotate current dom node.
    .rotate(@degree:5deg) { .transform(rotate(@arguments)); }
    // Scales current dom node.
    .scale(@ratio:1.5) { .transform(scale(@arguments)); }
    // Generates cross-browser-compatible "transition" output for a given
    // element.
    .transition(@type: all, @duration: 0.2s, @ease: ease) {
        // chrome, safari, other webkit browsers
        -webkit-transition: @arguments;
        // netscape, firefox 2.0+
           -moz-transition: @arguments;
        // opera 12
             -o-transition: @arguments;
        // css3, internetExplorer 9+
                transition: @arguments;
    }
    // Defines a transition duration in an animation effect.
    .transition-duration(@duration: 0.2s) {
        // chrome, safari, other webkit browsers
        -webkit-transition-duration: @arguments;
        // netscape, firefox 2.0+
           -moz-transition-duration: @arguments;
        // opera 12
             -o-transition-duration: @arguments;
        // css3, internetExplorer 9+
                transition-duration: @arguments;
    }

    // endregion

// endregion

// region classes

    // Shows dots for word which are too long.
    .ellipsis-by-text-overflow {
        // opera
        -o-text-overflow: ellipsis;
        // css3
           text-overflow: ellipsis;

        overflow: hidden;
        word-wrap: break-word;
    }
    // Performs a reflection on provided dom node.
    .reflect {
        // internetExplorer 9
        -ms-filter: "FlipH";
        // internetExplorer 4 - 8
            filter: FlipH;
        // safari, chrome, other webkit browsers
        -webkit-transform: scaleX(-1);
        // mozilla
           -moz-transform: scaleX(-1);
        // opera
             -o-transform: scaleX(-1);
        // css3
                transform: scaleX(-1);
    }

// endregion

}

// region vim modline

// vim: set tabstop=4 shiftwidth=4 expandtab:
// vim: foldmethod=marker foldmarker=region,endregion:

// endregion
